// Code generated by protoc-gen-go.
// source: types.proto
// DO NOT EDIT!

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	types.proto

It has these top-level messages:
	CommonAck
	BlankMsg
	HeadBeat
	LoginReq
	RoleInfo
	LoginAck
	LogoutReq
	LogoutAck
	SetPlayerNameReq
	SetPlayerNameAck
	ActiveMove
	ActiveDetail
	ScreenDecoration
	ArrowInfo
	ScreenArrowInfo
	ScreenRoleInfo
	ScreenInfo
	RoomInfo
	ScreenChangeNotify
	ChoseSideReq
	ChoseSideAck
	StartFightReq
	StartFightAck
	LeaveRoomReq
	LeaveRoomAck
	MoveActionReq
	MoveActionAck
	ChoseHeroReq
	ChoseHeroAck
	SearchRoomReq
	SearchRoomAck
	StartFightNotify
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommonAck struct {
	Status    int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	TimeStamp uint32 `protobuf:"varint,2,opt,name=timeStamp" json:"timeStamp,omitempty"`
	Message   string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CommonAck) Reset()                    { *m = CommonAck{} }
func (m *CommonAck) String() string            { return proto.CompactTextString(m) }
func (*CommonAck) ProtoMessage()               {}
func (*CommonAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{0} }

func (m *CommonAck) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CommonAck) GetTimeStamp() uint32 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *CommonAck) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type BlankMsg struct {
	Helper bool `protobuf:"varint,1,opt,name=helper" json:"helper,omitempty"`
}

func (m *BlankMsg) Reset()                    { *m = BlankMsg{} }
func (m *BlankMsg) String() string            { return proto.CompactTextString(m) }
func (*BlankMsg) ProtoMessage()               {}
func (*BlankMsg) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{1} }

func (m *BlankMsg) GetHelper() bool {
	if m != nil {
		return m.Helper
	}
	return false
}

type HeadBeat struct {
	TimeStamp int32 `protobuf:"varint,1,opt,name=time_stamp,json=timeStamp" json:"time_stamp,omitempty"`
	Code      int32 `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
}

func (m *HeadBeat) Reset()                    { *m = HeadBeat{} }
func (m *HeadBeat) String() string            { return proto.CompactTextString(m) }
func (*HeadBeat) ProtoMessage()               {}
func (*HeadBeat) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{2} }

func (m *HeadBeat) GetTimeStamp() int32 {
	if m != nil {
		return m.TimeStamp
	}
	return 0
}

func (m *HeadBeat) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type LoginReq struct {
	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Uuid     string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
	ServerId string `protobuf:"bytes,3,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
}

func (m *LoginReq) Reset()                    { *m = LoginReq{} }
func (m *LoginReq) String() string            { return proto.CompactTextString(m) }
func (*LoginReq) ProtoMessage()               {}
func (*LoginReq) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{3} }

func (m *LoginReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LoginReq) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *LoginReq) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

type RoleInfo struct {
	UserId   string   `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserName string   `protobuf:"bytes,2,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	HeroType string   `protobuf:"bytes,3,opt,name=hero_type,json=heroType" json:"hero_type,omitempty"`
	Skin     string   `protobuf:"bytes,4,opt,name=skin" json:"skin,omitempty"`
	Skills   []string `protobuf:"bytes,5,rep,name=skills" json:"skills,omitempty"`
	Hp       int32    `protobuf:"varint,6,opt,name=hp" json:"hp,omitempty"`
	FullHp   int32    `protobuf:"varint,7,opt,name=full_hp,json=fullHp" json:"full_hp,omitempty"`
}

func (m *RoleInfo) Reset()                    { *m = RoleInfo{} }
func (m *RoleInfo) String() string            { return proto.CompactTextString(m) }
func (*RoleInfo) ProtoMessage()               {}
func (*RoleInfo) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{4} }

func (m *RoleInfo) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RoleInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *RoleInfo) GetHeroType() string {
	if m != nil {
		return m.HeroType
	}
	return ""
}

func (m *RoleInfo) GetSkin() string {
	if m != nil {
		return m.Skin
	}
	return ""
}

func (m *RoleInfo) GetSkills() []string {
	if m != nil {
		return m.Skills
	}
	return nil
}

func (m *RoleInfo) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *RoleInfo) GetFullHp() int32 {
	if m != nil {
		return m.FullHp
	}
	return 0
}

type LoginAck struct {
	Common *CommonAck `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
	Hero   *RoleInfo  `protobuf:"bytes,4,opt,name=hero" json:"hero,omitempty"`
}

func (m *LoginAck) Reset()                    { *m = LoginAck{} }
func (m *LoginAck) String() string            { return proto.CompactTextString(m) }
func (*LoginAck) ProtoMessage()               {}
func (*LoginAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{5} }

func (m *LoginAck) GetCommon() *CommonAck {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *LoginAck) GetHero() *RoleInfo {
	if m != nil {
		return m.Hero
	}
	return nil
}

type LogoutReq struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *LogoutReq) Reset()                    { *m = LogoutReq{} }
func (m *LogoutReq) String() string            { return proto.CompactTextString(m) }
func (*LogoutReq) ProtoMessage()               {}
func (*LogoutReq) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{6} }

func (m *LogoutReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LogoutAck struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *LogoutAck) Reset()                    { *m = LogoutAck{} }
func (m *LogoutAck) String() string            { return proto.CompactTextString(m) }
func (*LogoutAck) ProtoMessage()               {}
func (*LogoutAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{7} }

func (m *LogoutAck) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type SetPlayerNameReq struct {
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName" json:"user_name,omitempty"`
}

func (m *SetPlayerNameReq) Reset()                    { *m = SetPlayerNameReq{} }
func (m *SetPlayerNameReq) String() string            { return proto.CompactTextString(m) }
func (*SetPlayerNameReq) ProtoMessage()               {}
func (*SetPlayerNameReq) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{8} }

func (m *SetPlayerNameReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type SetPlayerNameAck struct {
	Common   *CommonAck `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
	UserName string     `protobuf:"bytes,2,opt,name=user_name,json=userName" json:"user_name,omitempty"`
}

func (m *SetPlayerNameAck) Reset()                    { *m = SetPlayerNameAck{} }
func (m *SetPlayerNameAck) String() string            { return proto.CompactTextString(m) }
func (*SetPlayerNameAck) ProtoMessage()               {}
func (*SetPlayerNameAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{9} }

func (m *SetPlayerNameAck) GetCommon() *CommonAck {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *SetPlayerNameAck) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type ActiveMove struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	DirectX int32  `protobuf:"varint,2,opt,name=direct_x,json=directX" json:"direct_x,omitempty"`
	DirectY int32  `protobuf:"varint,3,opt,name=direct_y,json=directY" json:"direct_y,omitempty"`
	Speed   int32  `protobuf:"varint,4,opt,name=speed" json:"speed,omitempty"`
	PosX    int32  `protobuf:"varint,5,opt,name=pos_x,json=posX" json:"pos_x,omitempty"`
	PosY    int32  `protobuf:"varint,6,opt,name=pos_y,json=posY" json:"pos_y,omitempty"`
	Type    int32  `protobuf:"varint,7,opt,name=type" json:"type,omitempty"`
	Side    string `protobuf:"bytes,8,opt,name=side" json:"side,omitempty"`
}

func (m *ActiveMove) Reset()                    { *m = ActiveMove{} }
func (m *ActiveMove) String() string            { return proto.CompactTextString(m) }
func (*ActiveMove) ProtoMessage()               {}
func (*ActiveMove) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{10} }

func (m *ActiveMove) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ActiveMove) GetDirectX() int32 {
	if m != nil {
		return m.DirectX
	}
	return 0
}

func (m *ActiveMove) GetDirectY() int32 {
	if m != nil {
		return m.DirectY
	}
	return 0
}

func (m *ActiveMove) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *ActiveMove) GetPosX() int32 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *ActiveMove) GetPosY() int32 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func (m *ActiveMove) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ActiveMove) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

type ActiveDetail struct {
	Id        string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	BelongsTo string   `protobuf:"bytes,2,opt,name=belongs_to,json=belongsTo" json:"belongs_to,omitempty"`
	Name      string   `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	SubType   string   `protobuf:"bytes,4,opt,name=sub_type,json=subType" json:"sub_type,omitempty"`
	Skin      string   `protobuf:"bytes,5,opt,name=skin" json:"skin,omitempty"`
	Hp        int32    `protobuf:"varint,6,opt,name=hp" json:"hp,omitempty"`
	FullHp    int32    `protobuf:"varint,7,opt,name=full_hp,json=fullHp" json:"full_hp,omitempty"`
	Skills    []string `protobuf:"bytes,8,rep,name=skills" json:"skills,omitempty"`
}

func (m *ActiveDetail) Reset()                    { *m = ActiveDetail{} }
func (m *ActiveDetail) String() string            { return proto.CompactTextString(m) }
func (*ActiveDetail) ProtoMessage()               {}
func (*ActiveDetail) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{11} }

func (m *ActiveDetail) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ActiveDetail) GetBelongsTo() string {
	if m != nil {
		return m.BelongsTo
	}
	return ""
}

func (m *ActiveDetail) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ActiveDetail) GetSubType() string {
	if m != nil {
		return m.SubType
	}
	return ""
}

func (m *ActiveDetail) GetSkin() string {
	if m != nil {
		return m.Skin
	}
	return ""
}

func (m *ActiveDetail) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *ActiveDetail) GetFullHp() int32 {
	if m != nil {
		return m.FullHp
	}
	return 0
}

func (m *ActiveDetail) GetSkills() []string {
	if m != nil {
		return m.Skills
	}
	return nil
}

type ScreenDecoration struct {
	AssetId int32 `protobuf:"varint,1,opt,name=asset_id,json=assetId" json:"asset_id,omitempty"`
	X       int32 `protobuf:"varint,2,opt,name=X" json:"X,omitempty"`
	Y       int32 `protobuf:"varint,3,opt,name=Y" json:"Y,omitempty"`
}

func (m *ScreenDecoration) Reset()                    { *m = ScreenDecoration{} }
func (m *ScreenDecoration) String() string            { return proto.CompactTextString(m) }
func (*ScreenDecoration) ProtoMessage()               {}
func (*ScreenDecoration) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{12} }

func (m *ScreenDecoration) GetAssetId() int32 {
	if m != nil {
		return m.AssetId
	}
	return 0
}

func (m *ScreenDecoration) GetX() int32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *ScreenDecoration) GetY() int32 {
	if m != nil {
		return m.Y
	}
	return 0
}

type ArrowInfo struct {
}

func (m *ArrowInfo) Reset()                    { *m = ArrowInfo{} }
func (m *ArrowInfo) String() string            { return proto.CompactTextString(m) }
func (*ArrowInfo) ProtoMessage()               {}
func (*ArrowInfo) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{13} }

type ScreenArrowInfo struct {
	Arrow     *ArrowInfo  `protobuf:"bytes,1,opt,name=arrow" json:"arrow,omitempty"`
	ArrowMove *ActiveMove `protobuf:"bytes,2,opt,name=arrow_move,json=arrowMove" json:"arrow_move,omitempty"`
}

func (m *ScreenArrowInfo) Reset()                    { *m = ScreenArrowInfo{} }
func (m *ScreenArrowInfo) String() string            { return proto.CompactTextString(m) }
func (*ScreenArrowInfo) ProtoMessage()               {}
func (*ScreenArrowInfo) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{14} }

func (m *ScreenArrowInfo) GetArrow() *ArrowInfo {
	if m != nil {
		return m.Arrow
	}
	return nil
}

func (m *ScreenArrowInfo) GetArrowMove() *ActiveMove {
	if m != nil {
		return m.ArrowMove
	}
	return nil
}

type ScreenRoleInfo struct {
	Hero     *RoleInfo   `protobuf:"bytes,1,opt,name=hero" json:"hero,omitempty"`
	HeroMove *ActiveMove `protobuf:"bytes,2,opt,name=hero_move,json=heroMove" json:"hero_move,omitempty"`
}

func (m *ScreenRoleInfo) Reset()                    { *m = ScreenRoleInfo{} }
func (m *ScreenRoleInfo) String() string            { return proto.CompactTextString(m) }
func (*ScreenRoleInfo) ProtoMessage()               {}
func (*ScreenRoleInfo) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{15} }

func (m *ScreenRoleInfo) GetHero() *RoleInfo {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *ScreenRoleInfo) GetHeroMove() *ActiveMove {
	if m != nil {
		return m.HeroMove
	}
	return nil
}

type ScreenInfo struct {
	FrameId     int64               `protobuf:"varint,1,opt,name=frame_id,json=frameId" json:"frame_id,omitempty"`
	Width       int32               `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height      int32               `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Roles       []*ScreenRoleInfo   `protobuf:"bytes,4,rep,name=roles" json:"roles,omitempty"`
	Arrows      []*ScreenArrowInfo  `protobuf:"bytes,5,rep,name=arrows" json:"arrows,omitempty"`
	Decorations []*ScreenDecoration `protobuf:"bytes,6,rep,name=decorations" json:"decorations,omitempty"`
}

func (m *ScreenInfo) Reset()                    { *m = ScreenInfo{} }
func (m *ScreenInfo) String() string            { return proto.CompactTextString(m) }
func (*ScreenInfo) ProtoMessage()               {}
func (*ScreenInfo) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{16} }

func (m *ScreenInfo) GetFrameId() int64 {
	if m != nil {
		return m.FrameId
	}
	return 0
}

func (m *ScreenInfo) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ScreenInfo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ScreenInfo) GetRoles() []*ScreenRoleInfo {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *ScreenInfo) GetArrows() []*ScreenArrowInfo {
	if m != nil {
		return m.Arrows
	}
	return nil
}

func (m *ScreenInfo) GetDecorations() []*ScreenDecoration {
	if m != nil {
		return m.Decorations
	}
	return nil
}

type RoomInfo struct {
	RoomId        string `protobuf:"bytes,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	FightStartAt  int32  `protobuf:"varint,2,opt,name=fight_start_at,json=fightStartAt" json:"fight_start_at,omitempty"`
	FightDuration int32  `protobuf:"varint,3,opt,name=fight_duration,json=fightDuration" json:"fight_duration,omitempty"`
	Status        string `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
}

func (m *RoomInfo) Reset()                    { *m = RoomInfo{} }
func (m *RoomInfo) String() string            { return proto.CompactTextString(m) }
func (*RoomInfo) ProtoMessage()               {}
func (*RoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{17} }

func (m *RoomInfo) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *RoomInfo) GetFightStartAt() int32 {
	if m != nil {
		return m.FightStartAt
	}
	return 0
}

func (m *RoomInfo) GetFightDuration() int32 {
	if m != nil {
		return m.FightDuration
	}
	return 0
}

func (m *RoomInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ScreenChangeNotify struct {
	FrameId    int64              `protobuf:"varint,1,opt,name=frame_id,json=frameId" json:"frame_id,omitempty"`
	Heroes     []*RoleInfo        `protobuf:"bytes,2,rep,name=heroes" json:"heroes,omitempty"`
	HeroesMove []*ActiveMove      `protobuf:"bytes,3,rep,name=heroes_move,json=heroesMove" json:"heroes_move,omitempty"`
	Arrows     []*ScreenArrowInfo `protobuf:"bytes,4,rep,name=arrows" json:"arrows,omitempty"`
	// ....其他类似bullet信息
	DelHeroIds   []string `protobuf:"bytes,5,rep,name=del_hero_ids,json=delHeroIds" json:"del_hero_ids,omitempty"`
	DelArrowsIds []string `protobuf:"bytes,6,rep,name=del_arrows_ids,json=delArrowsIds" json:"del_arrows_ids,omitempty"`
	// ....其他类arrow消失的id
	// 装饰物变更
	AddDecorations []*ScreenDecoration `protobuf:"bytes,7,rep,name=add_decorations,json=addDecorations" json:"add_decorations,omitempty"`
	DelDecorations []*ScreenDecoration `protobuf:"bytes,8,rep,name=del_decorations,json=delDecorations" json:"del_decorations,omitempty"`
}

func (m *ScreenChangeNotify) Reset()                    { *m = ScreenChangeNotify{} }
func (m *ScreenChangeNotify) String() string            { return proto.CompactTextString(m) }
func (*ScreenChangeNotify) ProtoMessage()               {}
func (*ScreenChangeNotify) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{18} }

func (m *ScreenChangeNotify) GetFrameId() int64 {
	if m != nil {
		return m.FrameId
	}
	return 0
}

func (m *ScreenChangeNotify) GetHeroes() []*RoleInfo {
	if m != nil {
		return m.Heroes
	}
	return nil
}

func (m *ScreenChangeNotify) GetHeroesMove() []*ActiveMove {
	if m != nil {
		return m.HeroesMove
	}
	return nil
}

func (m *ScreenChangeNotify) GetArrows() []*ScreenArrowInfo {
	if m != nil {
		return m.Arrows
	}
	return nil
}

func (m *ScreenChangeNotify) GetDelHeroIds() []string {
	if m != nil {
		return m.DelHeroIds
	}
	return nil
}

func (m *ScreenChangeNotify) GetDelArrowsIds() []string {
	if m != nil {
		return m.DelArrowsIds
	}
	return nil
}

func (m *ScreenChangeNotify) GetAddDecorations() []*ScreenDecoration {
	if m != nil {
		return m.AddDecorations
	}
	return nil
}

func (m *ScreenChangeNotify) GetDelDecorations() []*ScreenDecoration {
	if m != nil {
		return m.DelDecorations
	}
	return nil
}

type ChoseSideReq struct {
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	Side   string `protobuf:"bytes,2,opt,name=side" json:"side,omitempty"`
}

func (m *ChoseSideReq) Reset()                    { *m = ChoseSideReq{} }
func (m *ChoseSideReq) String() string            { return proto.CompactTextString(m) }
func (*ChoseSideReq) ProtoMessage()               {}
func (*ChoseSideReq) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{19} }

func (m *ChoseSideReq) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *ChoseSideReq) GetSide() string {
	if m != nil {
		return m.Side
	}
	return ""
}

type ChoseSideAck struct {
	Common *CommonAck  `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
	Screen *ScreenInfo `protobuf:"bytes,2,opt,name=screen" json:"screen,omitempty"`
	Room   *RoomInfo   `protobuf:"bytes,3,opt,name=room" json:"room,omitempty"`
}

func (m *ChoseSideAck) Reset()                    { *m = ChoseSideAck{} }
func (m *ChoseSideAck) String() string            { return proto.CompactTextString(m) }
func (*ChoseSideAck) ProtoMessage()               {}
func (*ChoseSideAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{20} }

func (m *ChoseSideAck) GetCommon() *CommonAck {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *ChoseSideAck) GetScreen() *ScreenInfo {
	if m != nil {
		return m.Screen
	}
	return nil
}

func (m *ChoseSideAck) GetRoom() *RoomInfo {
	if m != nil {
		return m.Room
	}
	return nil
}

type StartFightReq struct {
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
}

func (m *StartFightReq) Reset()                    { *m = StartFightReq{} }
func (m *StartFightReq) String() string            { return proto.CompactTextString(m) }
func (*StartFightReq) ProtoMessage()               {}
func (*StartFightReq) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{21} }

func (m *StartFightReq) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type StartFightAck struct {
	Common *CommonAck `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
}

func (m *StartFightAck) Reset()                    { *m = StartFightAck{} }
func (m *StartFightAck) String() string            { return proto.CompactTextString(m) }
func (*StartFightAck) ProtoMessage()               {}
func (*StartFightAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{22} }

func (m *StartFightAck) GetCommon() *CommonAck {
	if m != nil {
		return m.Common
	}
	return nil
}

type LeaveRoomReq struct {
	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
}

func (m *LeaveRoomReq) Reset()                    { *m = LeaveRoomReq{} }
func (m *LeaveRoomReq) String() string            { return proto.CompactTextString(m) }
func (*LeaveRoomReq) ProtoMessage()               {}
func (*LeaveRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{23} }

func (m *LeaveRoomReq) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

type LeaveRoomAck struct {
	Common *CommonAck `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
}

func (m *LeaveRoomAck) Reset()                    { *m = LeaveRoomAck{} }
func (m *LeaveRoomAck) String() string            { return proto.CompactTextString(m) }
func (*LeaveRoomAck) ProtoMessage()               {}
func (*LeaveRoomAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{24} }

func (m *LeaveRoomAck) GetCommon() *CommonAck {
	if m != nil {
		return m.Common
	}
	return nil
}

type MoveActionReq struct {
	DirectX int32 `protobuf:"varint,1,opt,name=direct_x,json=directX" json:"direct_x,omitempty"`
	DirectY int32 `protobuf:"varint,2,opt,name=direct_y,json=directY" json:"direct_y,omitempty"`
	Speed   int32 `protobuf:"varint,3,opt,name=speed" json:"speed,omitempty"`
	PosX    int32 `protobuf:"varint,4,opt,name=pos_x,json=posX" json:"pos_x,omitempty"`
	PosY    int32 `protobuf:"varint,5,opt,name=pos_y,json=posY" json:"pos_y,omitempty"`
	Hp      int32 `protobuf:"varint,12,opt,name=hp" json:"hp,omitempty"`
	FullHp  int32 `protobuf:"varint,13,opt,name=full_hp,json=fullHp" json:"full_hp,omitempty"`
}

func (m *MoveActionReq) Reset()                    { *m = MoveActionReq{} }
func (m *MoveActionReq) String() string            { return proto.CompactTextString(m) }
func (*MoveActionReq) ProtoMessage()               {}
func (*MoveActionReq) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{25} }

func (m *MoveActionReq) GetDirectX() int32 {
	if m != nil {
		return m.DirectX
	}
	return 0
}

func (m *MoveActionReq) GetDirectY() int32 {
	if m != nil {
		return m.DirectY
	}
	return 0
}

func (m *MoveActionReq) GetSpeed() int32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *MoveActionReq) GetPosX() int32 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *MoveActionReq) GetPosY() int32 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func (m *MoveActionReq) GetHp() int32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *MoveActionReq) GetFullHp() int32 {
	if m != nil {
		return m.FullHp
	}
	return 0
}

type MoveActionAck struct {
	Common *CommonAck `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
}

func (m *MoveActionAck) Reset()                    { *m = MoveActionAck{} }
func (m *MoveActionAck) String() string            { return proto.CompactTextString(m) }
func (*MoveActionAck) ProtoMessage()               {}
func (*MoveActionAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{26} }

func (m *MoveActionAck) GetCommon() *CommonAck {
	if m != nil {
		return m.Common
	}
	return nil
}

type ChoseHeroReq struct {
	HeroType   string   `protobuf:"bytes,1,opt,name=hero_type,json=heroType" json:"hero_type,omitempty"`
	HeroSkin   string   `protobuf:"bytes,2,opt,name=hero_skin,json=heroSkin" json:"hero_skin,omitempty"`
	HeroSkills []string `protobuf:"bytes,3,rep,name=hero_skills,json=heroSkills" json:"hero_skills,omitempty"`
	ResetHp    bool     `protobuf:"varint,4,opt,name=resetHp" json:"resetHp,omitempty"`
}

func (m *ChoseHeroReq) Reset()                    { *m = ChoseHeroReq{} }
func (m *ChoseHeroReq) String() string            { return proto.CompactTextString(m) }
func (*ChoseHeroReq) ProtoMessage()               {}
func (*ChoseHeroReq) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{27} }

func (m *ChoseHeroReq) GetHeroType() string {
	if m != nil {
		return m.HeroType
	}
	return ""
}

func (m *ChoseHeroReq) GetHeroSkin() string {
	if m != nil {
		return m.HeroSkin
	}
	return ""
}

func (m *ChoseHeroReq) GetHeroSkills() []string {
	if m != nil {
		return m.HeroSkills
	}
	return nil
}

func (m *ChoseHeroReq) GetResetHp() bool {
	if m != nil {
		return m.ResetHp
	}
	return false
}

type ChoseHeroAck struct {
	Common *CommonAck `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
	Hero   *RoleInfo  `protobuf:"bytes,2,opt,name=hero" json:"hero,omitempty"`
}

func (m *ChoseHeroAck) Reset()                    { *m = ChoseHeroAck{} }
func (m *ChoseHeroAck) String() string            { return proto.CompactTextString(m) }
func (*ChoseHeroAck) ProtoMessage()               {}
func (*ChoseHeroAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{28} }

func (m *ChoseHeroAck) GetCommon() *CommonAck {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *ChoseHeroAck) GetHero() *RoleInfo {
	if m != nil {
		return m.Hero
	}
	return nil
}

type SearchRoomReq struct {
	RoomId   string `protobuf:"bytes,1,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId" json:"server_id,omitempty"`
}

func (m *SearchRoomReq) Reset()                    { *m = SearchRoomReq{} }
func (m *SearchRoomReq) String() string            { return proto.CompactTextString(m) }
func (*SearchRoomReq) ProtoMessage()               {}
func (*SearchRoomReq) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{29} }

func (m *SearchRoomReq) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *SearchRoomReq) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

type SearchRoomAck struct {
	Common   *CommonAck  `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
	RoomId   string      `protobuf:"bytes,2,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	RoomName string      `protobuf:"bytes,3,opt,name=room_name,json=roomName" json:"room_name,omitempty"`
	Blue     []*RoleInfo `protobuf:"bytes,4,rep,name=blue" json:"blue,omitempty"`
	Red      []*RoleInfo `protobuf:"bytes,5,rep,name=red" json:"red,omitempty"`
}

func (m *SearchRoomAck) Reset()                    { *m = SearchRoomAck{} }
func (m *SearchRoomAck) String() string            { return proto.CompactTextString(m) }
func (*SearchRoomAck) ProtoMessage()               {}
func (*SearchRoomAck) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{30} }

func (m *SearchRoomAck) GetCommon() *CommonAck {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *SearchRoomAck) GetRoomId() string {
	if m != nil {
		return m.RoomId
	}
	return ""
}

func (m *SearchRoomAck) GetRoomName() string {
	if m != nil {
		return m.RoomName
	}
	return ""
}

func (m *SearchRoomAck) GetBlue() []*RoleInfo {
	if m != nil {
		return m.Blue
	}
	return nil
}

func (m *SearchRoomAck) GetRed() []*RoleInfo {
	if m != nil {
		return m.Red
	}
	return nil
}

type StartFightNotify struct {
	Common *CommonAck  `protobuf:"bytes,1,opt,name=common" json:"common,omitempty"`
	Screen *ScreenInfo `protobuf:"bytes,2,opt,name=screen" json:"screen,omitempty"`
}

func (m *StartFightNotify) Reset()                    { *m = StartFightNotify{} }
func (m *StartFightNotify) String() string            { return proto.CompactTextString(m) }
func (*StartFightNotify) ProtoMessage()               {}
func (*StartFightNotify) Descriptor() ([]byte, []int) { return fileDescriptor_cspayload, []int{31} }

func (m *StartFightNotify) GetCommon() *CommonAck {
	if m != nil {
		return m.Common
	}
	return nil
}

func (m *StartFightNotify) GetScreen() *ScreenInfo {
	if m != nil {
		return m.Screen
	}
	return nil
}

func init() {
	proto.RegisterType((*CommonAck)(nil), "CommonAck")
	proto.RegisterType((*BlankMsg)(nil), "BlankMsg")
	proto.RegisterType((*HeadBeat)(nil), "HeadBeat")
	proto.RegisterType((*LoginReq)(nil), "LoginReq")
	proto.RegisterType((*RoleInfo)(nil), "RoleInfo")
	proto.RegisterType((*LoginAck)(nil), "LoginAck")
	proto.RegisterType((*LogoutReq)(nil), "LogoutReq")
	proto.RegisterType((*LogoutAck)(nil), "LogoutAck")
	proto.RegisterType((*SetPlayerNameReq)(nil), "SetPlayerNameReq")
	proto.RegisterType((*SetPlayerNameAck)(nil), "SetPlayerNameAck")
	proto.RegisterType((*ActiveMove)(nil), "ActiveMove")
	proto.RegisterType((*ActiveDetail)(nil), "ActiveDetail")
	proto.RegisterType((*ScreenDecoration)(nil), "ScreenDecoration")
	proto.RegisterType((*ArrowInfo)(nil), "ArrowInfo")
	proto.RegisterType((*ScreenArrowInfo)(nil), "ScreenArrowInfo")
	proto.RegisterType((*ScreenRoleInfo)(nil), "ScreenRoleInfo")
	proto.RegisterType((*ScreenInfo)(nil), "ScreenInfo")
	proto.RegisterType((*RoomInfo)(nil), "RoomInfo")
	proto.RegisterType((*ScreenChangeNotify)(nil), "ScreenChangeNotify")
	proto.RegisterType((*ChoseSideReq)(nil), "ChoseSideReq")
	proto.RegisterType((*ChoseSideAck)(nil), "ChoseSideAck")
	proto.RegisterType((*StartFightReq)(nil), "StartFightReq")
	proto.RegisterType((*StartFightAck)(nil), "StartFightAck")
	proto.RegisterType((*LeaveRoomReq)(nil), "LeaveRoomReq")
	proto.RegisterType((*LeaveRoomAck)(nil), "LeaveRoomAck")
	proto.RegisterType((*MoveActionReq)(nil), "MoveActionReq")
	proto.RegisterType((*MoveActionAck)(nil), "MoveActionAck")
	proto.RegisterType((*ChoseHeroReq)(nil), "ChoseHeroReq")
	proto.RegisterType((*ChoseHeroAck)(nil), "ChoseHeroAck")
	proto.RegisterType((*SearchRoomReq)(nil), "SearchRoomReq")
	proto.RegisterType((*SearchRoomAck)(nil), "SearchRoomAck")
	proto.RegisterType((*StartFightNotify)(nil), "StartFightNotify")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_cspayload) }

var fileDescriptor_cspayload = []byte{
	// 1201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x57, 0x4f, 0x6f, 0xeb, 0x44,
	0x10, 0x97, 0x9d, 0x3a, 0x71, 0x26, 0xe9, 0x1f, 0x0c, 0x82, 0x20, 0x40, 0x94, 0xe5, 0x21, 0x2a,
	0x84, 0x82, 0xd4, 0xde, 0x40, 0x1c, 0xfa, 0x5a, 0x50, 0x2b, 0xbd, 0x3e, 0x81, 0xd3, 0x43, 0x2b,
	0x0e, 0x96, 0x1b, 0x6f, 0x13, 0xab, 0x4e, 0x36, 0xd8, 0x4e, 0x1f, 0x3d, 0x73, 0xe1, 0x8b, 0x70,
	0xe5, 0xc0, 0x91, 0x1b, 0x9f, 0x83, 0x6f, 0xc0, 0xa7, 0x60, 0x66, 0x76, 0x9d, 0x6c, 0x42, 0x92,
	0x17, 0x24, 0x6e, 0x3b, 0x7f, 0x3c, 0x3b, 0x7f, 0x7e, 0x33, 0xb3, 0x86, 0x56, 0xf9, 0x34, 0x91,
	0x45, 0x77, 0x92, 0xab, 0x52, 0x89, 0x1f, 0xa0, 0x79, 0xa6, 0x46, 0x23, 0x35, 0x3e, 0xed, 0x3f,
	0x04, 0x6f, 0x43, 0xbd, 0x28, 0xe3, 0x72, 0x5a, 0x74, 0x9c, 0x43, 0xe7, 0xc8, 0x0b, 0x0d, 0x15,
	0xbc, 0x0f, 0xcd, 0x32, 0x1d, 0xc9, 0x5e, 0x19, 0x8f, 0x26, 0x1d, 0x17, 0x45, 0xbb, 0xe1, 0x9c,
	0x11, 0x74, 0xa0, 0x31, 0x92, 0x45, 0x11, 0x0f, 0x64, 0xa7, 0x86, 0xb2, 0x66, 0x58, 0x91, 0x42,
	0x80, 0xff, 0x3c, 0x8b, 0xc7, 0x0f, 0x57, 0xc5, 0x80, 0x6c, 0x0f, 0x65, 0x36, 0x91, 0x39, 0xdb,
	0xf6, 0x43, 0x43, 0x89, 0xaf, 0xc1, 0xbf, 0x90, 0x71, 0xf2, 0x5c, 0xc6, 0x65, 0xf0, 0x01, 0x00,
	0x99, 0x8d, 0x0a, 0xbe, 0x48, 0xfb, 0x60, 0x5d, 0x14, 0xc0, 0x4e, 0x5f, 0x25, 0x92, 0x3d, 0xf0,
	0x42, 0x3e, 0x8b, 0x6b, 0xf0, 0x5f, 0xa8, 0x41, 0x3a, 0x0e, 0xe5, 0x8f, 0xc1, 0x3b, 0xd0, 0x98,
	0x16, 0x32, 0x8f, 0xd2, 0x84, 0xbf, 0x6d, 0x86, 0x75, 0x22, 0x2f, 0x13, 0xfa, 0x70, 0x3a, 0x45,
	0xae, 0xcb, 0x5c, 0x3e, 0x07, 0xef, 0x41, 0x13, 0x85, 0x8f, 0x5a, 0x5d, 0xfb, 0xed, 0x6b, 0xc6,
	0x65, 0x22, 0x7e, 0x77, 0xc0, 0x0f, 0x55, 0x26, 0x2f, 0xc7, 0xf7, 0x6a, 0xbd, 0x59, 0x34, 0xc1,
	0x82, 0x71, 0x3c, 0x92, 0xc6, 0xb6, 0x4f, 0x8c, 0x97, 0x48, 0x93, 0x70, 0x28, 0x73, 0x15, 0x51,
	0xb2, 0x2b, 0xfb, 0xc4, 0xb8, 0x46, 0x9a, 0x1c, 0x2a, 0x1e, 0xd2, 0x71, 0x67, 0x47, 0x3b, 0x44,
	0x67, 0x4e, 0xfe, 0x43, 0x9a, 0x65, 0x45, 0xc7, 0x3b, 0xac, 0xd1, 0x2d, 0x9a, 0x0a, 0xf6, 0xc0,
	0x1d, 0x4e, 0x3a, 0x75, 0x8e, 0x19, 0x4f, 0xe4, 0xce, 0xfd, 0x34, 0xcb, 0x22, 0x64, 0x36, 0x74,
	0x95, 0x88, 0xbc, 0x98, 0x88, 0x2b, 0x93, 0x0a, 0xaa, 0xa4, 0x80, 0x7a, 0x9f, 0xcb, 0xca, 0x2e,
	0xb7, 0x8e, 0xa1, 0x3b, 0xab, 0x72, 0x68, 0x24, 0x98, 0xed, 0x1d, 0x72, 0x88, 0x9d, 0x68, 0x1d,
	0x37, 0xbb, 0x55, 0xc0, 0x21, 0xb3, 0xc5, 0x33, 0x68, 0xa2, 0x39, 0x35, 0x2d, 0x37, 0xa5, 0x76,
	0xae, 0x45, 0xb7, 0xae, 0xd5, 0xfa, 0x02, 0x0e, 0x7a, 0xb2, 0xfc, 0x2e, 0x8b, 0x9f, 0x74, 0x76,
	0xc8, 0xe4, 0x42, 0xf6, 0x9c, 0xc5, 0xec, 0x89, 0xde, 0xd2, 0x07, 0xdb, 0xc6, 0xb4, 0xa9, 0x24,
	0xe2, 0x0f, 0x07, 0xe0, 0xb4, 0x5f, 0xa6, 0x8f, 0xf2, 0x4a, 0x3d, 0x4a, 0x4a, 0xec, 0xcc, 0x51,
	0x3c, 0x05, 0xef, 0x82, 0x9f, 0xa4, 0xb9, 0xec, 0x97, 0xd1, 0x4f, 0x06, 0x62, 0x0d, 0x4d, 0xdf,
	0x58, 0xa2, 0x27, 0xae, 0xe5, 0x4c, 0x74, 0x1b, 0xbc, 0x05, 0x5e, 0x31, 0x91, 0x32, 0xe1, 0x34,
	0x7a, 0xa1, 0x26, 0x82, 0x37, 0xc1, 0x9b, 0xa8, 0x02, 0x0d, 0x79, 0x1a, 0xab, 0x48, 0xdc, 0x54,
	0xcc, 0x27, 0x53, 0x4c, 0x62, 0xde, 0x12, 0x14, 0x18, 0x22, 0xba, 0x96, 0x7c, 0x66, 0x78, 0xa4,
	0x08, 0x74, 0xdf, 0xc0, 0x03, 0xcf, 0xe2, 0x4f, 0x07, 0xda, 0xda, 0xf9, 0x73, 0x59, 0xc6, 0x69,
	0xf6, 0x2f, 0xf7, 0xb1, 0x79, 0xee, 0x64, 0xa6, 0xc6, 0x83, 0x22, 0x2a, 0x95, 0x89, 0xbd, 0x69,
	0x38, 0xd7, 0x8a, 0x6c, 0x72, 0x52, 0x34, 0x14, 0xf9, 0x4c, 0x61, 0x15, 0xd3, 0x3b, 0x0d, 0x51,
	0x0d, 0xc5, 0x06, 0xd2, 0x0b, 0x08, 0xf5, 0x2c, 0x84, 0x6e, 0x8b, 0x44, 0x0b, 0xca, 0xbe, 0x0d,
	0x65, 0x71, 0x89, 0x55, 0xed, 0xe7, 0x52, 0x8e, 0xcf, 0x65, 0x5f, 0xe5, 0x71, 0x99, 0x62, 0xc5,
	0xd0, 0x87, 0xb8, 0x28, 0x64, 0x59, 0x81, 0x06, 0x53, 0xcb, 0x34, 0xf6, 0x57, 0x1b, 0x9c, 0x1b,
	0x53, 0x09, 0xe7, 0x86, 0xa8, 0x5b, 0x93, 0x7c, 0xe7, 0x56, 0xb4, 0xa0, 0x79, 0x9a, 0xe7, 0xea,
	0x15, 0x01, 0x56, 0x44, 0xb0, 0xaf, 0xed, 0xce, 0x58, 0xc1, 0x21, 0x78, 0x31, 0x11, 0x33, 0xac,
	0xcc, 0x44, 0xa1, 0x16, 0x04, 0x9f, 0x01, 0xf0, 0x21, 0x1a, 0x21, 0x18, 0xf8, 0x9a, 0xd6, 0x71,
	0xab, 0x3b, 0xc7, 0x47, 0xd8, 0x64, 0x31, 0x1d, 0xc5, 0x2d, 0xec, 0xe9, 0x0b, 0x66, 0x43, 0xa1,
	0x6a, 0x1e, 0x67, 0x65, 0xf3, 0x04, 0x47, 0xa6, 0xfb, 0xd7, 0xd9, 0xe6, 0x51, 0xc0, 0xa6, 0xff,
	0x42, 0x50, 0x6a, 0xdb, 0x6c, 0x17, 0xd3, 0x71, 0x9f, 0x63, 0x6d, 0xaa, 0x74, 0xd4, 0xc2, 0x06,
	0xd3, 0x98, 0x0e, 0x44, 0xda, 0xab, 0x34, 0x29, 0x87, 0x26, 0x25, 0x9a, 0xd0, 0x73, 0x35, 0x1d,
	0x0c, 0x4b, 0x93, 0x1b, 0x43, 0x05, 0x9f, 0x80, 0x97, 0xa3, 0x4f, 0x05, 0x16, 0xb6, 0x86, 0xb7,
	0xef, 0x77, 0x17, 0x03, 0x08, 0xb5, 0x14, 0x1d, 0xad, 0x73, 0x98, 0x7a, 0xea, 0xb4, 0x8e, 0x0f,
	0xba, 0x4b, 0x99, 0x0c, 0x8d, 0x3c, 0x38, 0x81, 0x56, 0x32, 0x2b, 0x5b, 0x81, 0x30, 0x20, 0xf5,
	0x37, 0xba, 0xcb, 0x05, 0x0d, 0x6d, 0x2d, 0xf1, 0x0b, 0x0f, 0x52, 0x35, 0xaa, 0x06, 0x69, 0x8e,
	0x67, 0x6b, 0x3c, 0x10, 0x89, 0x91, 0x3d, 0x83, 0xbd, 0x7b, 0x72, 0x9a, 0x06, 0x7f, 0x5e, 0x46,
	0x71, 0x69, 0x42, 0x6c, 0x33, 0xb7, 0x47, 0xcc, 0x53, 0x8a, 0xc8, 0x68, 0x25, 0x53, 0x6d, 0xde,
	0x44, 0xbc, 0xcb, 0xdc, 0x73, 0xc3, 0xb4, 0x96, 0x98, 0x86, 0xb4, 0xa1, 0xc4, 0xdf, 0x2e, 0x04,
	0xda, 0xd9, 0xb3, 0x61, 0x3c, 0x1e, 0xc8, 0x97, 0xaa, 0x4c, 0xef, 0x9f, 0x36, 0x25, 0xfc, 0x23,
	0x4a, 0x6d, 0xae, 0x30, 0x87, 0x2e, 0x07, 0x6b, 0x55, 0xd9, 0x08, 0x82, 0xcf, 0xa1, 0xa5, 0x4f,
	0xba, 0xd2, 0x35, 0xd6, 0x5b, 0xa8, 0x34, 0x68, 0x39, 0x4f, 0x9c, 0x79, 0xb2, 0x77, 0x5e, 0x93,
	0xec, 0x43, 0x68, 0x27, 0x12, 0x3b, 0x8b, 0x30, 0x94, 0x26, 0xd5, 0x4a, 0x00, 0xe4, 0x5d, 0x20,
	0xeb, 0x32, 0x29, 0x28, 0x67, 0xa4, 0xa1, 0xf5, 0x59, 0xa7, 0xce, 0x3a, 0xf4, 0x1d, 0xdb, 0x2b,
	0x48, 0xeb, 0x4b, 0xd8, 0x8f, 0x93, 0x24, 0xb2, 0x0b, 0xd7, 0x58, 0x57, 0xb8, 0x3d, 0xd4, 0x9c,
	0x93, 0xfc, 0x2d, 0xdd, 0x60, 0x7f, 0xeb, 0xaf, 0xfd, 0x16, 0x35, 0xad, 0x6f, 0xc5, 0x57, 0xd0,
	0x3e, 0x1b, 0xaa, 0x42, 0xf6, 0x70, 0x74, 0x99, 0xfd, 0xb1, 0xba, 0xf4, 0xd5, 0xa8, 0x73, 0xad,
	0x51, 0xf7, 0x68, 0x7d, 0xbc, 0xed, 0xe0, 0xff, 0x18, 0xab, 0xce, 0x4e, 0xcd, 0xba, 0x6d, 0xde,
	0x54, 0xa1, 0x11, 0x51, 0xd3, 0xd2, 0xb5, 0x8c, 0x1b, 0x5d, 0x4e, 0x8d, 0xcc, 0x90, 0xd9, 0xe2,
	0x08, 0x76, 0x19, 0x6b, 0xdf, 0x12, 0x9e, 0x36, 0x79, 0x2d, 0x4e, 0x6c, 0xcd, 0x2d, 0x5d, 0x14,
	0x9f, 0x42, 0xfb, 0x85, 0x8c, 0x11, 0x12, 0x68, 0x63, 0xa3, 0xf5, 0x63, 0x4b, 0x71, 0x5b, 0xe3,
	0xbf, 0x39, 0xb0, 0x4b, 0x18, 0x23, 0xe4, 0x29, 0x7e, 0x0d, 0xd9, 0xeb, 0xcc, 0x59, 0xbf, 0xce,
	0xdc, 0x35, 0xeb, 0xac, 0xb6, 0x72, 0x9d, 0xed, 0xac, 0x5a, 0x67, 0x9e, 0xb5, 0xce, 0xf4, 0x8e,
	0x68, 0xaf, 0xda, 0x11, 0xbb, 0x0b, 0xaf, 0x95, 0x13, 0xdb, 0xdf, 0x6d, 0xa3, 0xfc, 0xd9, 0x31,
	0xd0, 0xa0, 0x2e, 0x30, 0x8f, 0x88, 0xf9, 0x2b, 0xcb, 0x59, 0x7a, 0x65, 0x55, 0x42, 0x5e, 0x64,
	0xee, 0x5c, 0xd8, 0xa3, 0x65, 0xf6, 0xa1, 0xee, 0xdc, 0xc8, 0x2c, 0xaa, 0x9a, 0x6e, 0x30, 0x23,
	0xa6, 0x77, 0x17, 0x3e, 0x6b, 0x73, 0x89, 0x8b, 0xe8, 0x62, 0xc2, 0x51, 0xfb, 0x61, 0x45, 0x8a,
	0xef, 0x2d, 0x27, 0xfe, 0xeb, 0x63, 0xcb, 0x5d, 0xfd, 0xd8, 0xfa, 0x06, 0x01, 0x25, 0xe3, 0xbc,
	0x3f, 0x7c, 0x1d, 0x38, 0x16, 0xdf, 0xad, 0xee, 0xd2, 0xbb, 0xf5, 0x57, 0xc7, 0xb6, 0xb3, 0xad,
	0x6f, 0xd6, 0x5d, 0xee, 0xf2, 0x5d, 0x2c, 0xb0, 0x1e, 0x0e, 0x3e, 0x31, 0xf8, 0x81, 0x8b, 0x11,
	0xdd, 0x65, 0x53, 0x69, 0x46, 0x99, 0x1d, 0x11, 0xb1, 0xf1, 0xdb, 0x5a, 0x8e, 0x30, 0xf2, 0x96,
	0xa5, 0xc4, 0xc5, 0xbf, 0x8e, 0x83, 0x79, 0xff, 0x98, 0x41, 0xfc, 0x7f, 0x75, 0xf9, 0x5d, 0x9d,
	0xff, 0x6c, 0x4e, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x63, 0xe5, 0xd3, 0xe8, 0x0c, 0x00,
	0x00,
}
